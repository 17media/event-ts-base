version: 2

vars:
  init: &init
    environment:
        TZ: 'Asia/Taipei'
    docker:
      - image: circleci/node

  save_out:  &save_out
    save_cache:
      key: out#{{ .Revision }}
      paths:
        - out

  restore_out:  &restore_out
    restore_cache:
      key: out#{{ .Revision }}

  save_node_modules:  &save_node_modules
    save_cache:
      key: node_modules#{{ checksum "yarn.lock" }}
      paths:
        - node_modules

  restore_node_modules:  &restore_node_modules
    restore_cache:
      key: node_modules#{{ checksum "yarn.lock" }}

  branch_not_deploy: &branch_not_deploy
    filters:
      branches:
        ignore:
          - master
          - /^v\d{1,3}\./

  branch_is_deploy: &branch_is_deploy
    filters:
      branches:
        only:
          - master

  setup_docker: &setup_docker
    setup_remote_docker:
      docker_layer_caching: true

  setup_git: &setup_git
    run:
      name: Setup Git
      command: |
        git config --global user.name "CircleCI"
        git config --global user.email "auto_deploy@circleci.com"

  export_env: &export_env
    run:
      name: Export Env
      command: |
        echo 'export IMAGE=$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$CIRCLE_SHA1' >> $BASH_ENV
        echo 'export GIT_TAG=v$(cat package.json | grep version | cut -d '\''"'\'' -f4)' >> $BASH_ENV

        source $BASH_ENV

        echo $IMAGE
        echo $GIT_TAG

jobs:
  lint:
    <<: *init
    steps:
      - checkout
      - *restore_node_modules
      - run: yarn
      - *save_node_modules
      - run: yarn lint

  build:
    <<: *init
    steps:
      - checkout
      - *restore_node_modules
      - run: yarn
      - *save_node_modules
      - run: yarn build
      - *save_out
      - run: ls -al out

  test:
    <<: *init
    steps:
      - checkout
      - *restore_node_modules
      - run: yarn
      - *save_node_modules
      - run: yarn test

  deploy:
    <<: *init
    steps:
      - checkout
      - *restore_out
      - *export_env
      - *setup_git
      - run:
          name: Deploy to GitHub version branch
          command: |
            cd out
            git init
            git add .
            git commit -nm $GIT_TAG
            git push https://$GH_TOKEN@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git  master:$GIT_TAG
            git push https://$GH_TOKEN@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git  master:latest -f
            git tag $GIT_TAG
            git push https://$GH_TOKEN@github.com/$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME.git $GIT_TAG

workflows:
  version: 2
  Testing:
    jobs:
      - test:
          <<: *branch_not_deploy
      - lint:
          <<: *branch_not_deploy
      - build:
          <<: *branch_not_deploy
  Deploy:
    jobs:
      - build:
          <<: *branch_is_deploy
      - deploy:
          <<: *branch_is_deploy
          requires:
            - build
